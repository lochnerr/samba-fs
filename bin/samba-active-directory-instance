#!/bin/sh

# samba-active-directory-instance: Setup a basic Samba active directory domain controller instance for testing.

if [ "$(cut -d. -f2- </proc/sys/kernel/hostname)" != "samdom.example.com" ]; then
	echo "Error: This shell script is for testing only!"
	exit 1
fi

start_time="$(date -u +%s)"

# If the fully qualified domain name has not been set, use the system hostname.
[ -z "${FQDN}" ] && FQDN="$(cat /proc/sys/kernel/hostname)"
# Get the host, realm and domain from the FQDN.
realm="$(echo "${FQDN#*.}" | tr '[:lower:]' '[:upper:]')"
domain="$(echo "${realm}" | tr '[:upper:]' '[:lower:]')"
[ -z "${WORKGROUP}" ] && WORKGROUP="$(echo "${realm}" | cut -d . -f 1)"

# Install samba and iproute (needed to determine the host's ip address).
install="dnf install -y"
[ -e /usr/bin/apt-get ] && install="apt-get install -y"
packages="samba-dc iproute"
[ -e /usr/bin/apt-get ] && packages="samba-ad-dc iproute2 iputils-ping"
# shellcheck disable=SC2086
$install $packages

# Remove the default samba config.
[ -e /etc/samba/smb.conf ] && rm /etc/samba/smb.conf

# Provision this DC.
if ! samba-tool domain provision \
  --realm="${realm}" \
  --domain="${WORKGROUP}" \
  --server-role=dc \
  --use-rfc2307 \
  --dns-backend=SAMBA_INTERNAL \
  --adminpass="Passw0rd"
then
	echo "Error: Provisioning domain controller failed!"
	exit 1
fi

# Enable TLS.
tls="t tls enabled  = yes"
tls="${tls}\nt tls keyfile  = tls/key.pem"
tls="${tls}\nt tls certfile = tls/cert.pem"
tls="${tls}\nt tls cafile   = tls/ca.pem"
tls="${tls}\nt tls priority = NORMAL:-VERS-TLS1.0:-VERS-TLS1.1:-VERS-TLS1.2"
sed "/workgroup = /a ${tls}" /etc/samba/smb.conf \
  | sed  's/^t /        /g' >/tmp/smb.conf
mv -f /tmp/smb.conf /etc/samba/smb.conf

# Use the kerberos configuration generated by Samba.
cp -f "/var/lib/samba/private/krb5.conf" /etc/

# Get the IP for this host.  The resolv.conf must be adjusted to point to itself.
IP="$(ip a | grep 'inet ' | grep -v 'inet 127' | awk '{print $2}' | cut -d/ -f1)"

# Fixup the resolv.conf file.
cat >/etc/resolv.conf <<__EOD__
search ${domain}
nameserver ${IP}
__EOD__

# Start me up.
if ! systemctl is-active systemd-journald >/dev/null 2>&1 ; then
	# shellcheck disable=SC1091,SC2086
	if [ -e /usr/bin/apt-get ]; then
		[ -e /etc/default/samba ]   && . /etc/default/samba
		/usr/sbin/samba --foreground --no-process-group $SAMBAOPTIONS &
	else
		[ -e /etc/sysconfig/samba ] && . /etc/sysconfig/samba
		/usr/bin/samba --foreground --no-process-group $SAMBAOPTIONS &
	fi
else
	samba_service="samba"
	[ -e /usr/bin/apt-get ] && samba_service="samba-ad-dc"
	systemctl start ${samba_service}
fi

# shellcheck disable=SC2181
if [ "$?" = "0" ]; then
	status="ready"
	echo "Info: The Active Directory Server is up and ready to process requests after $(($(date -u +%s) - start_time)) seconds."
else
	status="failed"
	echo "Error: Samba startup failed."
	wait_seconds="0"
fi

# Only wait for a stop signal if the system unit test directory exists.
if [ -d /sut ]; then
	# Set the status and wait for the stop signal.
	echo "$IP" >"/sut/samba.${status}"
	wait_seconds="${wait_seconds:-180}"
	echo "Info: Waiting up to ${wait_seconds} seconds for stop signal."
	# shellcheck disable=SC2034
	for try in $(seq "${wait_seconds}") ; do
		[ -e "/sut/samba.stop" ] && break
		sleep 1s
	done
	: >"/sut/samba.stopped"
	# If running under systemd, the container must be shutdown.
	systemctl is-active systemd-journald >/dev/null 2>&1 && kill -s "RTMIN+3" 1
fi

echo "Done!"

